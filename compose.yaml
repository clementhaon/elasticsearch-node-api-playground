services:
  server:
    build:
      context: .
    restart: always
    networks:
      - elastic
    environment:
      NODE_ENV: production
    ports:
      - 8080:8080
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: es01
    restart: always
    networks:
      - elastic
    ports:
      - "9200:9200"
    mem_limit: 2g

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: kib01
    restart: always
    networks:
      - elastic
    ports:
      - "5601:5601"

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    networks:
      - elastic
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --force-renewal -d ${CERTBOT_DOMAIN} -d ${CERTBOT_DOMAIN_WWW}

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    networks:
      - elastic
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/conf/:/etc/letsencrypt/:rw
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
    depends_on:
      - certbot
  # elastic-agent:
  #   image: docker.elastic.co/beats/elastic-agent:8.11.3
  #   container_name: elastic-agent
  #   restart: always
  #   networks:
  #       - elastic
  #   environment:
  #     - FLEET_SERVER_ENABLE=true
  #     - FLEET_SERVER_ELASTICSEARCH_HOST=http://127.0.0.1:9200
  #     - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVER_SERVICE_TOKEN}
  #     - FLEET_SERVER_POLICY_ID=${FLEET_SERVER_POLICY_ID}
  #   ports:
  #     - "8220:8220"
  #   depends_on:
  #     - elasticsearch

networks:
  elastic:
    driver: bridge
